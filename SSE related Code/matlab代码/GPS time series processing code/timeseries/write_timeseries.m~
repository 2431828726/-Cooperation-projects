function count = write_timeseries(file, ts)%function  = write_timeseries(file, timeseries)% write_timeseries writes a timeseries struct to a file in the .pfiles format.%% The timeseries struct has the following elements:%    timeseries.time        N by 1 vector of dates (decimal year)%    timeseries.sitename    1-4 character string with site name%    timeseries.comment     Comment(s), string or cell array%    timeseries.refllh      Reference lat-long-height (3 by 1)%    timeseries.refxyz      Reference XYZ (3 by 1)%    timeseries.llh         series of Lat-long-height values%    timeseries.east        series of east values%    timeseries.esig        series of east sigmas%    timeseries.north       series of east values%    timeseries.nsig        series of east sigmas%    timeseries.height      series of east values%    timeseries.hsig        series of east sigmas%    timeseries.enu         array-stored enu values (3 by N)%    timeseries.enucov      array of cells, each with 3x3 covariance%    timeseries.outlier     array of outlier flags, 0=ok, 1=outlier%    timeseries.x123axes    3x3 column vectors of coordinate axes x1,x2,x3%    timeseries.x123names   cell array of names for coordinate axes x1,x2,x3%    timeseries.x123        array-stored (x1,x2,x3) values (3 by N)%    timeseries.x123cov     array of cells, each with 3x3 covariance%MODIFICATION HISTORY% First working version June 2011 by Ronni Grapenthinif ( nargin ~= 2 )    error('Wrong number of arguments, need 2');endfid = fopen(file, 'w+');if (fid  == -1 )    error(['Error opening file ', file, '. Aborting']);end%create output matrix, better here than in the fprintf statement.for n=1:length(ts.time)    %epoch | GPS Site | Tie Site | Longitude (deg) | Latitude (deg) | Height (m) | Sigma_east (mm) | Sigma_north (mm) | Sigma_vert (mm) | cov_en | cov_eu | cov_nu | path to solution file    cov_en = ts.enucov{n}(1,2) / ts.esig(n) / ts.nsig(n);    cov_eu = ts.enucov{n}(1,3) / ts.esig(n) / ts.hsig(n);    cov_nu = ts.enucov{n}(2,3) / ts.nsig(n) / ts.hsig(n);    fprintf(fid, '%f %s %s %f %f %f %f %f %f %f %f %f %s\n', ts.time(n), ts.sitename, '.', ts.llh(1,n), ts.llh(2,n), ts.llh(3,n), ts.esig(n), ts.nsig(n), ts.hsig(n), cov_en, cov_eu, cov_nu, endend